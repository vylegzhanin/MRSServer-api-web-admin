/*
 * MRSServer
 * Integration technology for deploying R analytics inside web, desktop, mobile, and dashboard applications as well as backend systems. Turn your R scripts into analytics web services, so code can be easily executed by applications running on a secure server.  The core APIs can be grouped into several categories, including: [Authentication](#authentication-apis), [Web Services](#services-management-apis), [Sessions](#session-apis), [Snapshots](#snapshot-apis), and [Status](#status-apis). 
 *
 * OpenAPI spec version: 9.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Session
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-20T15:38:57.574Z")
public class Session {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("owner")
  private String owner = null;

  /**
   * Type of the runtime.
   */
  public enum RuntimeTypeEnum {
    @SerializedName("R")
    R("R"),
    
    @SerializedName("Python")
    PYTHON("Python");

    private String value;

    RuntimeTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("runtimeType")
  private RuntimeTypeEnum runtimeType = null;

  public Session id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier representing the session.
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "Unique identifier representing the session.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Session name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the session.
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Name of the session.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Session owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Owner of the session.
   * @return owner
  **/
  @ApiModelProperty(example = "null", value = "Owner of the session.")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public Session runtimeType(RuntimeTypeEnum runtimeType) {
    this.runtimeType = runtimeType;
    return this;
  }

   /**
   * Type of the runtime.
   * @return runtimeType
  **/
  @ApiModelProperty(example = "null", value = "Type of the runtime.")
  public RuntimeTypeEnum getRuntimeType() {
    return runtimeType;
  }

  public void setRuntimeType(RuntimeTypeEnum runtimeType) {
    this.runtimeType = runtimeType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Session session = (Session) o;
    return Objects.equals(this.id, session.id) &&
        Objects.equals(this.name, session.name) &&
        Objects.equals(this.owner, session.owner) &&
        Objects.equals(this.runtimeType, session.runtimeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, owner, runtimeType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Session {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    runtimeType: ").append(toIndentedString(runtimeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

